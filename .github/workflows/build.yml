name: CI/CD Pipeline
'on':
  workflow_dispatch: null
  push:
    branches:
      - main
jobs:
  ubuntu-marketplace:
    name: Setup Postgres
    runs-on: ubuntu-latest
    steps:
    # Use preinstalled PostgreSQL 
    - name: Start PostgreSQL on Ubuntu
      run: |
        sudo systemctl start postgresql.service
        pg_isready
    # Change user name and password to meet your requirements
    - name: Alter password default for postgres user
      run: |
        sudo -u postgres psql --command="ALTER USER postgres WITH PASSWORD 'admin123';" --command="\du"
    # Change database name to meet your requirements
    - name: Create additional database
      run: |
        sudo -u postgres createdb --owner=postgres niverdb
        PGPASSWORD=admin123 psql --username=postgres --host=localhost --list timetable
    
    # Put your steps here, e.g. checkout, build and test
    - name: Check out code
      uses: actions/checkout@v2 
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: ubuntu-marketplace
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: '${{ runner.os }}-m2-${{ hashFiles(''**/pom.xml'') }}'
          restore-keys: '${{ runner.os }}-m2'
      - name: Run Tests
        run: mvn -B test
  sonar:
    name: SonarCloud analysis
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: '${{ runner.os }}-sonar'
          restore-keys: '${{ runner.os }}-sonar'
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: '${{ runner.os }}-m2-${{ hashFiles(''**/pom.xml'') }}'
          restore-keys: '${{ runner.os }}-m2'
      - name: Analyze with SonarCloud
        run: >-
          mvn -B verify sonar:sonar -Dsonar.projectKey=davidrezende_niver-api
          -Dsonar.organization=davidrezende
          -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
